provider "aws" {
  region = "us-west-2"  # Set your desired region
}

resource "aws_eks_cluster" "my_cluster" {
  name     = "my-eks-cluster"
  role_arn = aws_iam_role.eks_cluster.arn

  vpc_config {
    subnet_ids = ["subnet-abc123", "subnet-def456"]  # Set your subnet IDs
  }
}

resource "aws_iam_role" "eks_cluster" {
  name = "eks-cluster-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [{
      Action = "sts:AssumeRole",
      Effect = "Allow",
      Principal = {
        Service = "eks.amazonaws.com"
      }
    }]
  })
}

resource "aws_eks_node_group" "node_group_1" {
  cluster_name    = aws_eks_cluster.my_cluster.name
  node_group_name = "ng-1"

  scaling_config {
    desired_size = 2
    max_size     = 3
    min_size     = 1
  }

  remote_access {
    ec2_ssh_key = "my-ssh-key"
  }

  launch_template {
    id      = "lt-1234567890abcdef0"  # Set your launch template ID
    version = "$Latest"
  }
}


resource "aws_eks_node_group" "node_group_2" {
  cluster_name    = aws_eks_cluster.my_cluster.name
  node_group_name = "ng-2"

  scaling_config {
    desired_size = 3
    max_size     = 4
    min_size     = 2
  }

  remote_access {
    ec2_ssh_key = "my-ssh-key"
  }

  launch_template {
    id      = "lt-abcdef1234567890"  # Set your launch template ID
    version = "$Latest"
  }
}

